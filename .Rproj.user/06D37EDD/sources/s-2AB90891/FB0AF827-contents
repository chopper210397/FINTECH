#----------ESTUDIOS ECONOM?TRICOS S.A.C.----------
#-CURSO VIRTUAL:ECONOMETR?A APLICADA PARA LA ELABORACI?N DE DOCUMENTOS DE INVESTIGACI?N CON R-------
#--------Profesor: Mg. Maximo Damian Valdera-------------------------------
#------------------SESI?N 1: MODELO DE REGRESI?N LINEAL M?LTIPLE
#--------------ETAPA 1. IMPORTAR LA SERIE TEMPORAL---------------------------
install.packages("readxl")
library(readxl)

#---visualizar la data----------------------------------------------
  
View(Data)

#--------------ETAPA 2. CONVERTIR UNA SERIE TEMPORAL---------------------
  
install.packages("tseries")
library(tseries)


tclipu =ts(Data[,1], start =c(1991,1),end=c(2023,4), freq=4)
tclipu
x11()
plot(tclipu)

tcly =ts(Data[,2], start =c(1991,1),end=c(2023,4), freq=4)
tcly
x11()
plot(tcly)


tclipr =ts(Data[,3], start =c(1991,1),end=c(2023,4), freq=4)
tclipr
x11()
plot(tclipr)



dummy1 =ts(Data[,4], start =c(1991,1),end=c(2023,4), freq=4)
dummy1

dummy2 =ts(Data[,5], start =c(1991,1),end=c(2023,4), freq=4)
dummy2


dummy3 =ts(Data[,6], start =c(1991,1),end=c(2023,4), freq=4)
dummy3

dummy4 =ts(Data[,7], start =c(1991,1),end=c(2023,4), freq=4)
dummy4

dummy5 =ts(Data[,8], start =c(1991,1),end=c(2023,4), freq=4)
dummy5


  
#----------ETAPA 3. EVALUAR LA SERIE NO ESTACIONARIA----------------------------
  
#Nota------Todas las series deben ser no estacionarias------------------------------
  
#-------Contrastamos la hip?tesis para un ??=0.05--------
#------H0: La serie no es estacionaria----------
#------H1: La serie es estacionaria-------------
  
  install.packages("tseries")
  library(tseries)
  
  

#-----------------Test ADF---------------------------
 

  adf.test(tclipu)
  adf.test(tcly)
  adf.test(tclipr)
  adf.test(tclre)
  adf.test(tclx)
  
  
#------Test PP-------------------------------
 pp.test(tclipu)
 pp.test(tcly)
 pp.test(tclipr)
 pp.test(tclre)
 pp.test(tclx)
  
#-------------ETAPA 4. CREAR UNA DATA------------

 # Aplicando un t?rmino autoregresivo
 tclipulag1=lag(tclipu,-1)
 tclipulag1
 

 
 
 tcliprlag1=lag(tclipr,-1)
 tcliprlag1
 

 
 
 
 # Aplicando dos t?rminos autoregresivos
 
 tclipulag2=lag(tclipu,-2)
 tclipulag2
 
 
 
 # DISE?AR LA MUESTRA ESTIMACI?N--------------------------------------------------------

 
 
 muestra <-  ts.intersect(tclipu,tcly,tclipr,tclipulag1,dummy1,dummy2,dummy3,dummy4,dummy5, tcliprlag1)
 muestra
 
 muestra_estimaci?n<-window(muestra, start=c(1991,2), end=c(2021,4))
 muestra_estimaci?n
 
 
 
 
#MUESTRA PROYECCI?N#-------------------------------------------
 
 muestra1 <-  ts.intersect(tcly,tclipr,tclipulag1,dummy1,dummy2,dummy3,dummy4,dummy5)
 muestra1
 
 
 muestra_proyeccion<-window(muestra1, start=c(2022,1), end=c(2023,4))
 muestra_proyeccion
 
 
 #--ESTIMACI?N ECONOM?TRICA MRLM-------------------------------------------
 
 mco<-lm(tclipu~tcly+tclipulag1+tclipr+tcliprlag1+dummy2,muestra_estimaci?n)
 summary(mco)
 

 
 
 
##---EVALUACI?N MODELO RLM-------------------------------------------------
 
 # Prueba de Jarque-Bera
 
 Resid <- mco$residuals
 jarque.bera.test(Resid)

 
 ###################################################################
 # No autocorrelaci?n
 
 install.packages("lmtest")
 library(lmtest)
 

 # Ho: No existe autocorrelaci?n en los residuos en un rezago
 dwtest(mco)
 

 # Breusch - Godfrey
 ## Perform Breusch-Godfrey test for first-order serial correlation: bgtest(y1 ~ x)
 # Ho: No existe autocorrelaci?n en los residuos en un rezago
 bgtest(mco, order = 1)
 # Ho: No existe autocorrelaci?n en los residuos en dos rezago
 bgtest(mco, order = 2)
 
 bgtest(mco, order = 44)
 
 
 #####################################################################
 ### No Heterocedasticidad.
 # Prueba de White
 white.test<-bptest(mco,~fitted(mco)+I(fitted(mco)^2))
 white.test
 
 

 ########################################################################
 ###No multicolinealidad.
 
 install.packages("car")
 library(car)
 
 vif(mco)
 
 
 #########################################################################
 ###Correcta especificaci?n matem?tica del modelo y de las variables.
 #  Rainbow analysis
 # Ho: El modelo es lineal (en las variables)
 # H1: El modelo no es lineal (en las variables)
 rain <- raintest(mco)
 rain
 
 ##############################################
 
 # An?lisis de estabilidad de los par?metros en el tiempo
 # Detecci?n de cambio estructural
 
 install.packages("strucchange")
 library(strucchange)
 
 
 ocus <- efp(mco, data=muestra, type="OLS-CUSUM")
 bound.ocus <- boundary(ocus, alpha=0.05)
 x11()
 plot(ocus)
 
 ocus2 <- efp(mco, data=muestra, type="Rec-CUSUM")
 bound.ocus <- boundary(ocus2, alpha=0.05)
 x11()
 plot(ocus2)
 

 ###############################
 
 
 install.packages("stargazer")
 library(stargazer)
 
 stargazer(mco, type="text")
 
#----------------------------------------------------------------------------#
 #----PROYECCI?N MRLM----------------------------------------------------
 #HACIENDO EL PRON?STICO
 predict(mco,muestra_proyeccion)
 
 
 #PR?NOSTICO CON INTERVALO DE CONFIANZA
 
 
 predict(mco,muestra_proyeccion, interval="confidence")
 
 pred<-predict(mco, muestra_proyeccion, interval="confidence")
 pred
 
 
 

