solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+xlim(33)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+xlim("33")
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,type)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,type="dashed")
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(aes(xintercept = 33,type="dashed"))
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(aes(xintercept = 33,colour=red))
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(aes(xintercept = 33,colour="red"))
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red",show.legend = "jeej")
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red",label="hola")
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous()
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 4)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 10)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 15)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text(size=5)+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text(size=3)+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text(size=4)+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total,color="red"))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total,fill="red"))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total,fill="lightblue"))+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total)fill="red")+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total),fill="red")+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total),colour="red")+geom_histogram(stat = "identity")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity",color="red")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity",fill="red")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity",fill="lightblue")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="red")+scale_x_continuous(n.breaks = 20)
solicitudes %>% group_by(age_since_activation) %>% summarise(total=sum(X..Solicitudes)) %>% ggplot(aes(x=age_since_activation,y=total,label=total))+geom_histogram(stat = "identity",fill="lightblue")+geom_text()+geom_vline(xintercept = 33,linetype="dashed",colour="gray")+scale_x_continuous(n.breaks = 20)
solicitudes_5 %>% group_by(Grupo.edad) %>% summarise(total=sum(X..Solicitudes))
```{r setup, include=FALSE,fig.pos="H"}
View(solicitudes)
solicitudes %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio))
solicitudes$X..Solicitudes<-as.numeric(solicitudes$X..Solicitudes)
solicitudes$aprobadas<-as.numeric(solicitudes$aprobadas)
solicitudes$Desembolsadas<-as.numeric(solicitudes$Desembolsadas)
solicitudes$Ticket.promedio<-as.numeric(solicitudes$Ticket.promedio)
solicitudes$credit_amount<-as.numeric(solicitudes$credit_amount)
solicitudes_5<-solicitudes %>% filter(Categoria.consejero=="5 Estrellas")
solicitudes %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio))
View(solicitudes)
solicitudes<-read.csv("solicitudes_consejeros_1_20_abril.csv",sep=";")
solicitudes$X..Solicitudes<-as.numeric(solicitudes$X..Solicitudes)
solicitudes$aprobadas<-as.numeric(solicitudes$aprobadas)
solicitudes$Desembolsadas<-as.numeric(solicitudes$Desembolsadas)
solicitudes$Ticket.promedio<-as.numeric(solicitudes$Ticket.promedio)
solicitudes$credit_amount<-as.numeric(solicitudes$credit_amount)
solicitudes_5<-solicitudes %>% filter(Categoria.consejero=="5 Estrellas")
solicitudes_5_consejero<-solicitudes_5 %>% group_by(advisor_name) %>% summarise(numero_solicitudes=sum(X..Solicitudes)) %>% arrange(-numero_solicitudes)
View(solicitudes_5)
solicitudes<-read.csv("solicitudes_consejeros_1_20_abril.csv",sep=";")
solicitudes$Ticket.promedio<-as.numeric(solicitudes$Ticket.promedio)
solicitudes<-read.csv("solicitudes_consejeros_1_20_abril.csv",sep=";")
parse_number(solicitudes$Ticket.promedio)
solicitudes$Ticket.promedio<-parse_number(solicitudes$Ticket.promedio)
solicitudes$Ticket.promedio<-parse_number(solicitudes$Ticket.promedio)
solicitudes$Ticket.promedio<-parse_number(solicitudes$Ticket.promedio)
solicitudes<-read.csv("solicitudes_consejeros_1_20_abril.csv",sep=";")
solicitudes$Ticket.promedio<-parse_number(solicitudes$Ticket.promedio)
class(solicitudes$Ticket.promedio)
solicitudes$Ticket.promedio[1]
solicitudes$Ticket.promedio[1]+1
as.numeric(solicitudes$Ticket.promedio)
as.numeric(solicitudes$Ticket.promedio[1])
solicitudes<-read.csv("solicitudes_consejeros_1_20_abril.csv",sep=";")
solicitudes$Ticket.promedio[1]/1000000
solicitudes$Ticket.promedio[1]
solicitudes$Ticket.promedio<-parse_number(solicitudes$Ticket.promedio)
solicitudes$Ticket.promedio[1]/1000000
solicitudes<-read.csv("solicitudes_consejeros_1_20_abril.csv",sep=";")
solicitudes$Ticket.promedio<-parse_number(solicitudes$Ticket.promedio,locale = decimal_mark=",")
solicitudes$Ticket.promedio<-parse_number(solicitudes$Ticket.promedio,locale = locale(decimal_mark=","))
solicitudes$credit_amount<-parse_number(solicitudes$credit_amount,locale = locale(decimal_mark=","))
solicitudes<-read.csv("solicitudes_consejeros_1_20_abril.csv",sep=";")
solicitudes$X..Solicitudes<-as.numeric(solicitudes$X..Solicitudes)
solicitudes$aprobadas<-as.numeric(solicitudes$aprobadas)
solicitudes$Desembolsadas<-as.numeric(solicitudes$Desembolsadas)
solicitudes$Ticket.promedio<-parse_number(solicitudes$Ticket.promedio,locale = locale(decimal_mark=","))
solicitudes$credit_amount<-parse_number(solicitudes$credit_amount,locale = locale(decimal_mark=","))
solicitudes_5<-solicitudes %>% filter(Categoria.consejero=="5 Estrellas")
solicitudes_5_consejero<-solicitudes_5 %>% group_by(advisor_name) %>% summarise(numero_solicitudes=sum(X..Solicitudes)) %>% arrange(-numero_solicitudes)
solicitudes %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio))
str(solicitudes)
solicitudes %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio))
solicitudes %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=sum(Ticket.promedio))
solicitudes %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio))
solicitudes %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% na.omit(Ticket.promedio)
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio))
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio))
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket)
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=Categoria.consejero,y=promedio_ticket))+geom_bar(stat = "identity")
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket))+geom_bar(stat = "identity")
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket))+geom_bar(stat = "identity",fill=promedio_ticket)+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")+theme(legend.position = "none")
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)/1000000) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")+theme(legend.position = "none")
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)/1000000) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket,label=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")+theme(legend.position = "none")+geom_text()
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=mean(Ticket.promedio)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket,label=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")+theme(legend.position = "none")+geom_text()
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=round( mean(Ticket.promedio))) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket,label=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")+theme(legend.position = "none")+geom_text()
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=round( mean(Ticket.promedio))/1000) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket,label=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")+theme(legend.position = "none")+geom_text()
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=round( mean(Ticket.promedio))/1000000) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket,label=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")+theme(legend.position = "none")+geom_text()
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=round( mean(Ticket.promedio)/1000000,digits = 2)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket,label=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",title = "Promedio de ticket por categoría")+theme(legend.position = "none")+geom_text()
# omitimos los NA para que no anulen el cálculo posterior
solicitudes %>% na.omit(Ticket.promedio) %>% group_by(Categoria.consejero) %>% summarise(promedio_ticket=round( mean(Ticket.promedio)/1000000,digits = 2)) %>% arrange(-promedio_ticket) %>% ggplot(aes(x=reorder(Categoria.consejero,promedio_ticket),y=promedio_ticket,fill=promedio_ticket,label=promedio_ticket))+geom_bar(stat = "identity")+coord_flip()+labs(x="",y="Promedio de ticket en millones",title = "Promedio de ticket por categoría")+theme(legend.position = "none")+geom_text()
=======
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readxl)
library(ggplot2)
library(tidyr)
library(dplyr)
library(kableExtra)
read_xlsx("tickets_enero_20abril_aflore")
read_xlsx("tickets_enero_20abril_aflore.xls")
read_xls("tickets_enero_20abril_aflore.xls")
read_xls("tickets_enero_20abril_aflore.xls")
read_xls("tickets_enero_20abril_aflore.xls",skip = 2)
tickets<-read_xls("tickets_enero_20abril_aflore.xls",skip = 2)
str(tickets)
class(tickets)
as_tibble(tickets)
tickets<-as_tibble(tickets)
class(tickets)
View(tickets)
View(tickets)
unique(tickets)
unique(tickets$Title)
unique(tickets$State)
unique(tickets$Priority)
unique(tickets$Group)
unique(tickets$Owner)
unique(tickets$Customer)
unique(tickets$Organization)
tickets %>% filter(Organization=="NA")
tickets %>% filter(Organization=="")
tickets %>% filter(Organization!="Aflore SAS")
unique(tickets$`Create Channel`)
unique(tickets$Customer)
unique(tickets$Sender)
unique(tickets$Tags)
range(tickets$`Created at`)
str(tickets)
parse_datetime(tickets$`Created at`)
parse_datetime(tickets$`Created at`[1:10])
str(tickets)
# como las fechas estan como carácteres y no date lo convertimos
parse_datetime(tickets$`Created at`)
str(tickets)
# como las fechas estan como carácteres y no date lo convertimos
tickets$`Created at`<-parse_datetime(tickets$`Created at`)
tickets$`Updated at`<-parse_datetime(tickets$`Updated at`)
tickets$`Closed at`<-parse_datetime(tickets$`Closed at`)
str(tickets)
View(tickets)
range(tickets$`Created at`)
max(tickets$`Created at`)
View(tickets)
library(lubridate)
month(tickets$`Created at`)
tickets %>% mutate(mes=month(`Created at`))
tickets<-tickets %>% mutate(mes=month(`Created at`))
tickets
View(tickets)
length(unique(tickets$Title))
length(unique(tickets$Subgrupo))
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title))+geom_bar()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title))+geom_bar()+coord_flip()
parse_factor(tickets$Title)
library(forcats)
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x= fct_reorder(Title) ))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x= reorder(Title) ))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x= order(Title) ))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x= Title ))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x= Title ))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x= Title ))+geom_count()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x= Title ))+geom_count()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x= Title ))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder( Title,-n ),y=n))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder( Title,n ),y=n))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% count(Title) %>%  ggplot(aes(x=reorder( Title,n ),y=n))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% count(Title) %>%  ggplot(aes(x=reorder( Title,n ),y=n,fill=mes))+geom_bar(stat = "identity")+coord_flip()
View(tickets)
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>%  ggplot(aes(x=reorder( Title))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>%  ggplot(aes(x=Title))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>%  ggplot(aes(x=Title))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title))+geom_count()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title,y=Title))+geom_count()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title,y=count(Title)))+geom_count()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title,y=Title))+geom_count()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title,y=Title))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title,y=Title))+geom_bar(stat = "identity")+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=Title))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)-length(x))))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x)),fill=mes))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x)),color=mes))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x)),fill=mes))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))),fill=mes)+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar(fill=mes)+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar(fill=mes)+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar(fill=tickets$mes)+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))),fill=mes)+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x)),fill=mes))+geom_bar()+coord_flip()
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()+facet_grid(~mes)
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()+facet_wrap(~mes)
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()+facet_grid(~mes)
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% filter(mes!="") %>%  ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()+facet_grid(~mes)
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% filter(mes!="") %>%  ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()+facet_grid(~mes)+labs(x="")
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>% filter(mes!="") %>%  ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()+facet_grid(~mes)+labs(x="",y="conteo")
# creando tablas resumen
tickets %>% count(Title)
# creando tablas resumen
tickets %>% count(-Title)
# creando tablas resumen
tickets %>% count(Title) %>% order_by(n)
# creando tablas resumen
tickets %>% count(Title) %>% arrange(n)
# creando tablas resumen
tickets %>% count(Title) %>% arrange(-n)
# creando tablas resumen
tickets %>% count(mes,Title) %>% arrange(-n)
# creando tablas resumen
tickets %>% count(Title,mes) %>% arrange(-n)
# creando tablas resumen
tickets %>% count(mes,Title)
View(tickets)
# creando tablas resumen
tickets %>% count(mes,Title)
# creando tablas resumen
tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes)
# creando tablas resumen
tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n)
# creando tablas resumen
tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(`3`)
# creando tablas resumen
tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-`3`)
# creando tablas resumen
tickets_mes<-tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-`3`)
kbl(tickets_mes)
tickets %>% mutate(ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero")))
tickets %>% mutate(ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero","")))
tickets %>% mutate(ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero",ifelse(mes=="3","Marzo",
ifelse(mes=="4","Abril","")))))
tickets<-tickets %>% mutate(ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero",ifelse(mes=="3","Marzo",
ifelse(mes=="4","Abril","")))))
View(tickets)
tickets<-tickets %>% mutate(mes=ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero",ifelse(mes=="3","Marzo",
ifelse(mes=="4","Abril","")))))
View(tickets)
tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-`3`)
tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n)
# creando tablas resumen
tickets_mes<-tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-Marzo)
parse_factor(unique(tickets$mes))
parse_factor(unique(tickets$mes),levels = c("Enero","Febrero","Marzo","Abril"))
tickets$mes<-parse_factor(unique(tickets$mes),levels = c("Enero","Febrero","Marzo","Abril"))
tickets$mes<-parse_factor(tickets$mes,levels = c("Enero","Febrero","Marzo","Abril"))
str(tickets)
# el title es mas completo que el subgrupo en cuanto a detalles, de preferencia usar el primero, brinda mas data
tickets %>%  ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()+facet_grid(~mes)+labs(x="",y="conteo")
View(tickets_mes)
tickets$`Created at`<-parse_datetime(tickets$`Created at`)
tickets$`Updated at`<-parse_datetime(tickets$`Updated at`)
tickets$`Closed at`<-parse_datetime(tickets$`Closed at`)
tickets<-tickets %>% mutate(mes=month(`Created at`))
tickets<-tickets %>% mutate(mes=ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero",ifelse(mes=="3","Marzo",
ifelse(mes=="4","Abril","")))))
tickets$mes<-parse_factor(tickets$mes,levels = c("Enero","Febrero","Marzo","Abril"))
tickets<-tickets %>% filter(mes!="")
# creando tablas resumen
tickets_mes<-tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-Marzo)
View(tickets_mes)
tickets<-tickets %>% na.omit(mes)
# creando tablas resumen
tickets_mes<-tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-Marzo)
tickets<-read_xls("tickets_enero_20abril_aflore.xls",skip = 2)
# como las fechas estan como carácteres y no date lo convertimos
tickets$`Created at`<-parse_datetime(tickets$`Created at`)
tickets$`Updated at`<-parse_datetime(tickets$`Updated at`)
tickets$`Closed at`<-parse_datetime(tickets$`Closed at`)
tickets<-tickets %>% mutate(mes=month(`Created at`))
tickets<-tickets %>% mutate(mes=ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero",ifelse(mes=="3","Marzo",
ifelse(mes=="4","Abril","")))))
tickets$mes<-parse_factor(tickets$mes,levels = c("Enero","Febrero","Marzo","Abril"))
# creando tablas resumen
tickets_mes<-tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-Marzo)
unique(tickets$mes)
tickets %>% filter(mes !=NA)
View(tickets)
tickets %>% filter(mes !="NA")
tickets<-tickets %>% filter(mes !="NA")
unique(tickets$mes)
tickets<-tickets %>% filter(!is.na(mes))
tickets<-tickets %>% filter(!is.na(mes))
unique(tickets$mes)
tickets<-tickets %>% filter(mes!]="NA")
tickets<-tickets %>% filter(mes!="NA")
tickets<-tickets %>% filter(mes!="<NA>")
tickets<-tickets %>% filter(mes!=NA)
tickets<-read_xls("tickets_enero_20abril_aflore.xls",skip = 2)
# como las fechas estan como carácteres y no date lo convertimos
tickets$`Created at`<-parse_datetime(tickets$`Created at`)
tickets$`Updated at`<-parse_datetime(tickets$`Updated at`)
tickets$`Closed at`<-parse_datetime(tickets$`Closed at`)
tickets<-tickets %>% mutate(mes=month(`Created at`))
tickets<-tickets %>% mutate(mes=ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero",ifelse(mes=="3","Marzo",
ifelse(mes=="4","Abril","")))))
tickets$mes<-parse_factor(tickets$mes,levels = c("Enero","Febrero","Marzo","Abril"))
tickets<-tickets %>% filter(!is.na(mes))
# creando tablas resumen
tickets_mes<-tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-Marzo)
tickets<-read_xls("tickets_enero_20abril_aflore.xls",skip = 2)
# como las fechas estan como carácteres y no date lo convertimos
tickets$`Created at`<-parse_datetime(tickets$`Created at`)
tickets$`Updated at`<-parse_datetime(tickets$`Updated at`)
tickets$`Closed at`<-parse_datetime(tickets$`Closed at`)
tickets<-tickets %>% mutate(mes=month(`Created at`))
#tickets<-tickets %>% mutate(mes=ifelse(mes=="1","Enero",ifelse(mes=="2","Febrero",ifelse(mes=="3","Marzo",
ifelse(mes=="4","Abril","")))))
#tickets$mes<-parse_factor(tickets$mes,levels = c("Enero","Febrero","Marzo","Abril"))
tickets<-tickets %>% filter(mes!="")
# creando tablas resumen
tickets_mes<-tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-3)
tickets %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n)
unique(tickets$Title)
unique(tickets$Title) %>% arrange()
tickets$Title %>% unique()
tickets$Title %>% unique() %>% arrange()
tickets$Title %>% unique() %>% arrange(Title)
tickets$Title %>% unique() %>% order_by(Title)
unique(tickets$Title)
library(stringr)
str_order(unique(tickets$Title))
str_order(unique(tickets$Title),numeric = FALSE)
tickets_mes$Title
ticket_comercial<-tickets %>% filter(Title %in% c("0001- Devolución de saldos por mayor valor pagado",
"0002 - Devolución de saldo de seguro",
"0003 - Inconsistencia con el pago de florines"  ,
"0004 - Certificación de consejero"   ,
"0006 - Certificación declaración de renta" ,
"0007- Estado de cuenta" ,
"0007-Estado de cuenta"  ,
"0008 - Solicitud de Paz y Salvo" ,
"0009 - Derecho de petición" ,
"0013 - Reintegro Consejero/Nombramiento Líder" ,
"0014 - Retiro Consejero/Líder"     ,
"0015 - Quitar y adicionar crédito de un corte",
"0016 - Revertir crédito",
"0017 - Mi Aflore - Consejero",
"0018 - Mi Aflore - Cliente",
"0019 - Llenada por Consejero",
"0020 - Llenada por Cliente",
"0022 - Falla en el proceso de desembolso Digital",
"0025 - Cancelación póliza",
"0027 - Problemas PBX",
"0054 - Problemas o cambios expansión geográfica",
"0057  - Problemas ARK o base de datos" ,
"0057 - Problemas ARK o base de datos",
"0059 - Corregir Abono negativo a capital",
"0060 - Pago duplicado"  ))
View(ticket_comercial)
tickets_comercial_tabla<-ticket_comercial %>% count(mes,Title) %>% pivot_wider(names_from = mes,values_from = n) %>% arrange(-`3`)
View(tickets_comercial_tabla)
kbl(tickets_comercial_tabla)
View(tickets_comercial_tabla)
ticket_comercial %>% ggplot(aes(x=Title))+geom_bar()
ticket_comercial %>% ggplot(aes(x=Title,fill=mes))+geom_bar()
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=reorder(Title,Title,function(x)length(x))))+geom_bar()+coord_flip()+facet_grid(~mes)+labs(x="",y="conteo")
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=Title))+geom_bar()+coord_flip()+labs(x="",y="conteo")
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=Title,y=n))+geom_bar()+coord_flip()+labs(x="",y="conteo")
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=Title,y=n))+geom_bar(stat = "identity")+coord_flip()+labs(x="",y="conteo")
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=Title,y=n,fill=mes))+geom_bar(stat = "identity")+coord_flip()+labs(x="",y="conteo")
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=Title,y=n,fill=mes))+geom_bar(stat = "identity",position = "dodge2")+coord_flip()+labs(x="",y="conteo")
>>>>>>> Stashed changes
install.packages("gganimate")
setwd("~/Documentos/GitHub/FINTECH/andrea_solicitud")
library(tidyverse)
library(readxl)
read_xlsx("application_bi.xlsx")
read_xlsx("applications_bi.xlsx")
applications_bi<-read_xlsx("applications_bi.xlsx")
gestioncomercial<-read_xlsx("gestion_comercial.xlsx")
str(applications_bi)
gestioncomercial %>% select(id)
applications_bi %>% select(ID,`Client ID`,`Created At`,Status,
`Client Document Number`,`Client Type Request`,
`Advisor ID`,`Client Type Request New`,`Aflore Product ID`)
applications_bi<-applications_bi %>% select(ID,`Client ID`,`Created At`,Status,
`Client Document Number`,`Client Type Request`,
`Advisor ID`,`Client Type Request New`,`Aflore Product ID`)
gestioncomercial %>% select(`Nombre Asesor`,`Numero De Documento`,Timestamp,`Nombre Asesor`,`Tipo De Persona`)
gestioncomercial<-gestioncomercial %>% select(`Nombre Asesor`,`Numero De Documento`,Timestamp,`Nombre Asesor`,`Tipo De Persona`)
View(applications_bi)
View(gestioncomercial)
gestioncomercial<-read_xlsx("gestion_comercial.xlsx")
gestioncomercial<-gestioncomercial %>% select(`Nombre Asesor`,`Numero De Documento`,
Timestamp,`Nombre Asesor`,`Tipo De Persona`,`Medio De Contacto`)
View(gestioncomercial)
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`))+geom_bar()
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`))+geom_count()
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`))+geom_bar()
View(gestioncomercial)
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`,fill=`Tipo De Persona`))+geom_bar()
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`,fill=`Tipo De Persona`))+geom_bar(position = "dodge")
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`,fill=`Tipo De Persona`))+geom_bar(position = "dodge2")
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`,fill=`Tipo De Persona`))+geom_bar(position = "dodge3")
applications_bi %>% left_join(gestioncomercial)
str(applications_bi)
str(gestioncomercial)
applications_bi %>% left_join(gestioncomercial,by = c("Numero De Documento"="Client Document Number"))
applications_bi %>% left_join(gestioncomercial,by = c("Client Document Number"="Numero De Documento"))
applications_bi %>% inner_join(gestioncomercial,by = c("Client Document Number"="Numero De Documento"))
newdata<-applications_bi %>% inner_join(gestioncomercial,by = c("Client Document Number"="Numero De Documento"))
View(newdata)
str(gestioncomercial)
range(gestioncomercial$Timestamp)
unique(gestioncomercial$`Nombre Asesor`)
unique(gestioncomercial$`Tipo De Persona`)
# filtering again
newdata %>% filter(`Tipo De Persona`=="Cliente")
# filtering again
newdata %>% filter(`Tipo De Persona`=="Cliente")
# filtering again
newdata %>% ggplot(aes(x=`Tipo De Persona`))+geom_bar()
View(newdata)
View(newdata)
newdata %>% filter(`Tipo De Persona`=="Cliente")
unique(newdata$`Client Type Request`)
newdata %>% filter(`Tipo De Persona`=="Cliente" & `Client Type Request`=="Nuevo")
newdata %>% filter(`Tipo De Persona`=="Cliente" & `Client Type Request`=="Nuevo" &
`Advisor ID` %in% c('23296','26508', '23313') & `Client Type Request New`=="Cliente directo")
View(newdata)
unique(newdata$`Aflore Product ID`)
newdata %>% filter(`Tipo De Persona`=="Cliente" & `Client Type Request`=="Nuevo" &
`Advisor ID` %in% c('23296','26508', '23313') & `Client Type Request New`=="Cliente directo" &
`Aflore Product ID`!="83")
newdata %>% filter(`Tipo De Persona`=="Cliente" & `Client Type Request`=="Nuevo" &
`Advisor ID` %in% c('23296','26508', '23313') & `Client Type Request New`=="Cliente directo")
# plots
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`,fill=`Tipo De Persona`))+geom_bar(position = "dodge2")
# filtering again
newdata %>% ggplot(aes(x=`Tipo De Persona`))+geom_bar()
# plots
gestioncomercial %>% ggplot(aes(x=`Medio De Contacto`,fill=`Tipo De Persona`))+geom_bar(position = "dodge2")
