geom_text(position = position_dodge(width = 1))
ggsave("indicadoresportipoprioridad.png",dpi = 800,width = 11,height = 4.5)
=======
ticket_comercial %>% group_by(Title,mes) %>% summarise(dif_updated_closed= median((`Updated at`- `Created at`)/3600)) %>% arrange(Title,-dif_updated_closed) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
# Horas promedio por pqr por mes (grÃ¡fico)
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=reorder(Title,n),y=n,fill=factor(mes,levels=c("4","3","2","1"))))+geom_bar(stat = "identity",position = "dodge2")+coord_flip()+labs(x="",y="conteo")+guides(fill=guide_legend(title="mes")
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=reorder(Title,n),y=n,fill=factor(mes,levels=c("4","3","2","1"))))+geom_bar(stat = "identity",position = "dodge2")+coord_flip()+labs(x="",y="conteo")+guides(fill=guide_legend(title="mes"))
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=reorder(Title,n),y=n,fill=factor(mes,levels=c("4","3","2","1"))))+geom_bar(stat = "identity",position = "dodge2")+coord_flip()+labs(x="",y="conteo")+guides(fill=guide_legend(title="mes"))
ticket_comercial %>% count(mes,Title)
ticket_comercial %>% count(mes,Title)
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=reorder(Title,n),y=n,fill=factor(mes,levels=c("4","3","2","1")),label=n))+geom_bar(stat = "identity",position = "dodge2")+coord_flip()+labs(x="",y="conteo")+guides(fill=guide_legend(title="mes"))+geom_text()
ticket_comercial %>% count(mes,Title) %>% ggplot(aes(x=reorder(Title,n),y=n,fill=factor(mes,levels=c("4","3","2","1")),label=n))+geom_bar(stat = "identity",position = "dodge2")+coord_flip()+labs(x="",y="conteo")+guides(fill=guide_legend(title="mes"))+geom_text(position = position_dodge(width = 0.9))
ticket_comercial %>% count(mes,Title) %>%  %>% arrange(Title,-n) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% count(mes,Title) %>% arrange(Title,-n) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% group_by(Title,mes) %>% summarise(dif_updated_closed= median((`Updated at`- `Created at`)/3600)) %>% arrange(Title,-dif_updated_closed) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% group_by(mes,Title) %>% summarise(dif_updated_closed= median((`Updated at`- `Created at`)/3600)) %>% arrange(Title,-dif_updated_closed) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% group_by(mes,Title) %>% summarise(dif_updated_closed= median((`Updated at`- `Created at`)/3600)) %>% arrange(mes,Title,-dif_updated_closed) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% group_by(mes,Title) %>% summarise(dif_updated_closed= median((`Updated at`- `Created at`)/3600)) %>% arrange(Title,-dif_updated_closed) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% group_by(mes,Title) %>% summarise(dif_updated_closed= median((`Updated at`- `Created at`)/3600)) %>% arrange(Title,mes) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% count(mes,Title) %>% arrange(Title,-n) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% count(mes,Title) %>% arrange(Title,mes) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
ticket_comercial %>% count(mes,Title) %>% arrange(Title,mes) %>% kbl() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE
)
library(readxl)
<<<<<<< HEAD
>>>>>>> Stashed changes
library(readxl)
comentarios<-read_xlsx("comentarios.xlsx")
rm(prioridades)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(tidytext)
str(comentarios)
comments_only<-comentarios %>% select(comentarios)
View(comentarios)
View(comments_only)
comments_only %>% unnest_tokens(word,text) %>% count(word,sort = TRUE) %>% mutate(word = reorder(word, n))
comments_only %>% unnest_tokens(word,comentarios) %>% count(word,sort = TRUE) %>% mutate(word = reorder(word, n))
words<-comments_only %>% unnest_tokens(word,comentarios) %>% count(word,sort = TRUE) %>% mutate(word = reorder(word, n))
stopwords_es <- read.csv("https://bitsandbricks.github.io/data/stopwords_es.csv",
stringsAsFactors = FALSE)
View(stopwords_es)
words_tokenizado <- words %>%
anti_join(stopwords_es, by = c("word" = "STOPWORD"))
View(words_tokenizado)
library(writexl)
write_xlsx(words_tokenizado,"words.xlsx")
words_tokenizado %>%
count(word, sort = TRUE)
View(words_tokenizado)
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
read_xlsx("reoferta.xlsx")
reoferta<-read_xlsx("reoferta.xlsx")
str(reoferta)
reoferta<-read_xlsx("reoferta.xlsx")
View(reoferta)
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes")
View(reoferta)
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes")
View(reoferta)
as.Date(reoferta$`1.0`)
library(purr)
library(lubridate)
parse_date_time(reoferta$`1.0`)
parse_date_time2(reoferta$`1.0`)
library(readr)
parse_date(reoferta$`1.0`)
parse_datetime(reoferta$`1.0`)
parse_time(reoferta$`1.0`)
as.numeric(reoferta$`1.0`)
parse_date( as.numeric(reoferta$`1.0`) )
as.Date( as.numeric(reoferta$`1.0`)  )
as.Date( as.numeric(reoferta$`1.0`) %>% na.omit()  )
View(reoferta)
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes",
col_types = c("date"))
View(reoferta)
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes",
col_types = c("text"))
View(reoferta)
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes",
col_types = c("skip"))
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes",
col_types = c("guess"))
View(reoferta)
View(reoferta)
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes",
col_types = c("list"))
View(reoferta)
View(reoferta)
View(reoferta)
View(reoferta)
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes",
col_types = c("list"))
View(reoferta)
reoferta<-read_xlsx("reoferta.xlsx",sheet = "Base de clientes",
col_types = c("text"))
View(reoferta)
library(readxl)
library(readxl)
library(dplyr)
library(lubridate)
library(ggplot2)
<<<<<<< Updated upstream
not_interested<-read_xlsx("Solicitudes e informacion Sac .xlsx",sheet = "No interesados")
not_interested<-read_xlsx("Solicitudes e informacion Sac .xlsx",sheet = "No interesados ")
rm(prioridades)
View(not_interested)
str(not_interested)
# variables interesantes a primera vista:
# fecha, tipo, estado, comentario, causa de desestimiento, estado actual, monto aprobado, producto, plazo
not_interested %>% count(`Causa de Desistimiento`)
# variables interesantes a primera vista:
# fecha, tipo, estado, comentario, causa de desestimiento, estado actual, monto aprobado, producto, plazo
not_interested %>% count(`Causa de Desistimiento`) %>% arrange(-n)
not_interested %>% count(TIPO) %>% arrange(-n)
#----------------------- toda la data -----------------------------
a<-not_interested %>% count(`Causa de Desistimiento`) %>% arrange(-n)
View(a)
rm(a)
#----------------------- toda la data -----------------------------
not_interested %>% count(`Causa de Desistimiento`) %>% arrange(-n)
not_interested %>% count(ESTADO) %>% arrange(-n)
not_interested %>% count(COMENTARIO) %>% arrange(-n)
not_interested %>% count(`ESTADO ACTUAL`) %>% arrange(-n)
not_interested %>% count(`Monto Aprobado`) %>% arrange(-n)
a<-not_interested %>% count(`Monto Aprobado`) %>% arrange(-n)
View(a)
View(not_interested)
View(a)
library(stringr)
str_replace(a$`Monto Aprobado`,"COP ","")
View(a)
# variables interesantes a primera vista:
# fecha, tipo, estado, comentario, causa de desestimiento, estado actual, monto aprobado, producto, plazo
# ------------- WORKING DATA ----------------#
str_replace(not_interested$`Monto Aprobado`,"COP ","")
# variables interesantes a primera vista:
# fecha, tipo, estado, comentario, causa de desestimiento, estado actual, monto aprobado, producto, plazo
# ------------- WORKING DATA ----------------#
not_interested$`Monto Aprobado`<-str_replace(not_interested$`Monto Aprobado`,"COP ","")
View(not_interested)
View(a)
str_replace(not_interested$`Monto Aprobado`,".","")
not_interested$`Monto Aprobado`
as.numeric( not_interested$`Monto Aprobado`)
library(readr)
parse_number( not_interested$`Monto Aprobado`)
parse_integer( not_interested$`Monto Aprobado`)
a<-parse_integer( not_interested$`Monto Aprobado`)
a<-parse_double( not_interested$`Monto Aprobado`)
rm(a)
View(not_interested)
a<-not_interested %>% count(`Monto Aprobado`) %>% arrange(-n)
View(a)
str(not_interested)
View(not_interested)
View(a)
not_interested$`Monto Aprobado`<-as.numeric(not_interested$`Monto Aprobado`)
a<-not_interested %>% count(`Monto Aprobado`) %>% arrange(-n)
View(a)
View(a)
a<-not_interested %>% count(`Monto Aprobado`) %>% arrange(`Monto Aprobado`)
View(a)
hist(a)
View(a)
hist(a$`Monto Aprobado`)
a %>% ggplot(aes(x=`Monto Aprobado`))+geom_histogram()
a %>% ggplot(aes(x=`Monto Aprobado`/1000000))+geom_histogram()
a %>% ggplot(aes(x=`Monto Aprobado`/1000))+geom_histogram()
not_interested %>% count(`Monto Aprobado`) %>% arrange(`Monto Aprobado`)
not_interested %>% count(`Monto Aprobado`) %>% arrange(-n)
not_interested %>% count(Producto) %>% arrange(-n)
a<-not_interested %>% count(Producto) %>% arrange(-n)
View(a)
not_interested %>% count(Producto) %>% arrange(-n)
not_interested %>% count(PLAZO) %>% arrange(-n)
not_interested %>% count(`Decision Final`) %>% arrange(-n)
not_interested %>% count(PLAZO) %>% arrange(-n)
install.packages("googlesheets4")
library(googlesheets4)
=======
library(readxl)
mensajes<-read_xlsx("onlymessages1.xlsx")
# lo ideal es buscar solo por un nombre porque si se busca por los dos nombres del CV los numeros se reducen bastante
coordinadores<-data.frame(x=c("Dulfay Linares","Esmeralda Correa","Jenny RincÃ³n","Jhiovanni Vivas",
"Jose Luis Ãlvarez","Luz Dary Useche","MarÃ­a Paula Sarmiento",
"Nelson Rubio","Olga Alvarado","Sandra Herrera","AndrÃ©s Aguilar",
"Camilo Escobedo","Claudia Duque","Diego Cruz","Jessica Arias",
"Jorge FernÃ¡ndez","Paola Castro","Ruth Gonzalez"),y="")
coordinadores[1,2]<-length( grep("id 1001",mensajes$Body))
coordinadores[2,2]<-length( grep("id 1002",mensajes$Body))
coordinadores[3,2]<-length( grep("id 1003",mensajes$Body))
coordinadores[4,2]<-length( grep("id 1004",mensajes$Body))
coordinadores[5,2]<-length( grep("id 1005",mensajes$Body))
coordinadores[6,2]<-length( grep("id 1006",mensajes$Body))
coordinadores[7,2]<-length( grep("id 1007",mensajes$Body))
coordinadores[8,2]<-length( grep("id 1008",mensajes$Body))
coordinadores[9,2]<-length( grep("id 1009",mensajes$Body))
coordinadores[10,2]<-length( grep("id 1010",mensajes$Body))
coordinadores[11,2]<-length( grep("id 2001",mensajes$Body))
coordinadores[12,2]<-length( grep("id 2002",mensajes$Body))
coordinadores[13,2]<-length( grep("id 2003",mensajes$Body))
coordinadores[14,2]<-length( grep("id 2004",mensajes$Body))
coordinadores[15,2]<-length( grep("id 2005",mensajes$Body))
coordinadores[16,2]<-length( grep("id 2006",mensajes$Body))
coordinadores[17,2]<-length( grep("id 2007",mensajes$Body))
coordinadores[18,2]<-length( grep("id 2008",mensajes$Body))
# lo ideal es buscar solo por un nombre porque si se busca por los dos nombres del CV los numeros se reducen bastante
coordinadores2<-data.frame(x=c("Dulfay Linares","Esmeralda Correa","Jenny RincÃ³n","Jhiovanni Vivas",
"Jose Luis Ãlvarez","Luz Dary Useche","MarÃ­a Paula Sarmiento",
"Nelson Rubio","Olga Alvarado","Sandra Herrera","AndrÃ©s Aguilar",
"Camilo Escobedo","Claudia Duque","Diego Cruz","Jessica Arias",
"Jorge FernÃ¡ndez","Paola Castro","Ruth Gonzalez"),y="")
coordinadores2[1,2]<-length( grep("id1001",mensajes$Body))
coordinadores2[2,2]<-length( grep("id1002",mensajes$Body))
coordinadores2[3,2]<-length( grep("id1003",mensajes$Body))
coordinadores2[4,2]<-length( grep("id1004",mensajes$Body))
coordinadores2[5,2]<-length( grep("id1005",mensajes$Body))
coordinadores2[6,2]<-length( grep("id1006",mensajes$Body))
coordinadores2[7,2]<-length( grep("id1007",mensajes$Body))
coordinadores2[8,2]<-length( grep("id1008",mensajes$Body))
coordinadores2[9,2]<-length( grep("id1009",mensajes$Body))
coordinadores2[10,2]<-length( grep("id1010",mensajes$Body))
coordinadores2[11,2]<-length( grep("id2001",mensajes$Body))
coordinadores2[12,2]<-length( grep("id2002",mensajes$Body))
coordinadores2[13,2]<-length( grep("id2003",mensajes$Body))
coordinadores2[14,2]<-length( grep("id2004",mensajes$Body))
coordinadores2[15,2]<-length( grep("id2005",mensajes$Body))
coordinadores2[16,2]<-length( grep("id2006",mensajes$Body))
coordinadores2[17,2]<-length( grep("id2007",mensajes$Body))
coordinadores2[18,2]<-length( grep("id2008",mensajes$Body))
View(coordinadores)
View(mensajes)
View(coordinadores2)
coordinadores %>% ggplot(aes(x=reorder(x,y),y=y,label=y))+geom_bar(stat = "identity",fill="lightblue")+geom_text()+coord_flip()+
labs(x="",y="veces de id unico por cv",title = "Numero de veces que aparece el id Ãºnico por CV",
caption = "Si el id se menciona en el saludo y al despedirse, las gestiones deberian ser la mitad")
#
coordinadores$y<-as.numeric(coordinadores$y)
coordinadores1$y<-as.numeric(coordinadores1$y)
coordinadores<-coordinadores %>% mutate(gestiones=y/2)
coordinadores %>% ggplot(aes(x=reorder(x,y),y=y,label=y))+geom_bar(stat = "identity",fill="lightblue")+geom_text()+coord_flip()+
labs(x="",y="veces de id unico por cv",title = "Numero de veces que aparece el id Ãºnico por CV",
caption = "Si el id se menciona en el saludo y al despedirse, las gestiones deberian ser la mitad")
coordinadores2$y<-as.numeric(coordinadores1$y)
coordinadores2 %>% ggplot(aes(x=reorder(x,y),y=y,label=y))+geom_bar(stat = "identity",fill="lightblue")+geom_text()+coord_flip()+
labs(x="",y="veces de id unico por cv",title = "Numero de veces que aparece el id Ãºnico por CV",
caption = "Si el id se menciona en el saludo y al despedirse, las gestiones deberian ser la mitad")
coordinadores2$y<-as.numeric(coordinadores2$y)
coordinadores2 %>% ggplot(aes(x=reorder(x,y),y=y,label=y))+geom_bar(stat = "identity",fill="lightblue")+geom_text()+coord_flip()+
labs(x="",y="veces de id unico por cv",title = "Numero de veces que aparece el id Ãºnico por CV",
caption = "Si el id se menciona en el saludo y al despedirse, las gestiones deberian ser la mitad")
coordinadores %>% ggplot(aes(x=reorder(x,y),y=y,label=y))+geom_bar(stat = "identity",fill="lightblue")+geom_text()+coord_flip()+
labs(x="",y="veces de id unico por cv",title = "Numero de veces que aparece el id Ãºnico por CV",
caption = "Si el id se menciona en el saludo y al despedirse, las gestiones deberian ser la mitad")
coordinadores2 %>% ggplot(aes(x=reorder(x,y),y=y,label=y))+geom_bar(stat = "identity",fill="lightblue")+geom_text()+coord_flip()+
labs(x="",y="veces de id unico por cv",title = "Numero de veces que aparece el id Ãºnico por CV",
caption = "Si el id se menciona en el saludo y al despedirse, las gestiones deberian ser la mitad")
View(coordinadores2)
View(coordinadores2)
View(coordinadores)
# sumando id numero cv con espacio y sin espacio
coordinadores[,2]
coordinadores2[,2]
coordinadores[,2]+coordinadores2[,2]
# sumando id numero cv con espacio y sin espacio
coordinadoressuma<-coordinadores2
View(coordinadoressuma)
View(coordinadoressuma)
coordinadoressuma[,2]<- coordinadores[,2]+coordinadores2[,2]
View(coordinadoressuma)
coordinadoressuma %>% ggplot(aes(x=reorder(x,y),y=y,label=y))+geom_bar(stat = "identity",fill="lightblue")+geom_text()+coord_flip()+
labs(x="",y="veces de id unico por cv",title = "Numero de veces que aparece el id Ãºnico por CV",
caption = "Si el id se menciona en el saludo y al despedirse, las gestiones deberian ser la mitad")
View(mensajes)
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
library(readxl)
library(dplyr)
library(tidyr)
library(lubridate)
install.packages("readxl")
library(readxl)
library(dplyr)
library(readxl)
library(dplyr)
library(readxl)
library(dplyr)
llamadas<-read_xlsx("voximplant_abril.xlsx")
library(scales)
library(readr)
library(readxl)
library(lubridate)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kableExtra)
library(writexl)
library(lubridate)
library(dplyr)
library(ggplot2)
library(dplyr)
# DATA VOXIMPLANT _sac_ llamadas
install.packages("dplyr")
install.packages("ggplot2")
install.packages("readxl")
install.packages("readxl")
llamadas<-read_xlsx("voximplant_abril.xlsx")
library(readxl)
library(scales)
library(readr)
library(readxl)
library(lubridate)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kableExtra)
library(writexl)
install.packages("lubridate")
library(scales)
library(readr)
library(readxl)
library(lubridate)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kableExtra)
library(writexl)
llamadas<-read_xlsx("voximplant_abril.xlsx")
llamadas<-llamadas %>% mutate(mes=month(`Date of call start`))
llamadas<-llamadas %>% mutate(hora=hour(llamadas$`Date of call start`))
# llamadas$hora<-parse_date_time(llamadas$hora,"%H")
# seleccionando solo los de servicio para agente A
llamadas %>%filter(mes==5) %>% filter(`Agent A` %in% c("Tatiana Real",
"Leidy Rojas" ,
"Catalina Suarez Camero",
"Laura Nieto",
"Karen Fernandez",
"Eduardo Enrique Sosa Zapata",
"Natalia Piedrahita",
"Luisa Fernanda Moreno Torres")) %>%
ggplot(aes(x=hora,fill=`Agent A`))+geom_bar()
# para todo el equipo
# llamadas entrantes por hora
llamadas %>% filter(mes==4) %>% filter(`Is incoming`=="yes") %>% count(hora) %>% ggplot(aes(x=hora,y=n))+geom_bar(stat = "identity",fill="brown")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas entrantes por hora",y="")
# para todo el equipo
# llamadas entrantes por hora
llamadas %>% filter(mes==5) %>% filter(`Is incoming`=="yes") %>% count(hora) %>% ggplot(aes(x=hora,y=n))+geom_bar(stat = "identity",fill="brown")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas entrantes por hora",y="")
ggsave("llamadasporhorasentrantes.png",dpi = 300)
# llamadas salientes por hora
llamadas %>% filter(mes==5) %>% filter(`Is incoming`=="no") %>% count(hora) %>% ggplot(aes(x=hora,y=n))+geom_bar(stat = "identity",fill="brown")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas salientes por hora", y="")
ggsave("llamadasporhorassalientes.png",dpi = 300)
# para todo el equipo
# llamadas entrantes por hora
llamadas %>% filter(mes==5) %>% filter(`Is incoming`=="yes") %>% count(hora) %>% ggplot(aes(x=hora,y=n,label=n))+
geom_bar(stat = "identity",fill="lightblue")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas entrantes por hora",y="")+geom_text()
# llamadas salientes por hora
llamadas %>% filter(mes==5) %>% filter(`Is incoming`=="no") %>% count(hora) %>% ggplot(aes(x=hora,y=n,label=n))+
geom_bar(stat = "identity",fill="lightblue")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas salientes por hora", y="")+geom_text()
# para todo el equipo
# llamadas entrantes por hora
llamadas %>% filter(mes==5) %>% filter(`Is incoming`=="yes") %>% count(hora) %>% ggplot(aes(x=hora,y=n,label=n))+
geom_bar(stat = "identity",fill="lightblue")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas entrantes por hora",y="")+geom_text()
ggsave("llamadasporhorasentrantes.png",dpi = 300)
# llamadas salientes por hora
llamadas %>% filter(mes==5) %>% filter(`Is incoming`=="no") %>% count(hora) %>% ggplot(aes(x=hora,y=n,label=n))+
geom_bar(stat = "identity",fill="lightblue")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas salientes por hora", y="")+geom_text()
ggsave("llamadasporhorassalientes.png",dpi = 300)
# para todo el equipo
# llamadas entrantes por hora
llamadas %>% filter(mes==5) %>% filter(`Is incoming`=="yes") %>% count(hora) %>% ggplot(aes(x=hora,y=n,label=n))+
geom_bar(stat = "identity",fill="lightblue")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas entrantes por hora",y="")+geom_text(size=2)
ggsave("llamadasporhorasentrantes.png",dpi = 300)
# llamadas salientes por hora
llamadas %>% filter(mes==5) %>% filter(`Is incoming`=="no") %>% count(hora) %>% ggplot(aes(x=hora,y=n,label=n))+
geom_bar(stat = "identity",fill="lightblue")+
scale_x_continuous(n.breaks = 15)+labs(title = "Llamadas salientes por hora", y="")+geom_text(size=2)
ggsave("llamadasporhorassalientes.png",dpi = 300)
>>>>>>> Stashed changes
library(dplyr)
library(readxl)
library(readr)
gestion<-read_xlsx("con_gestion_comercial")
gestion<-read_xlsx("con_gestion_comercial.xlsx")
enviando<-read_xlsx("enviando.xlsx")
enviando %>% left_join(gestion)
View(enviando)
colnames(gestion)
colnames(gestion)
colnames(enviando)
colnames(enviando)<-"advisor_id"
colnames(enviando)
enviando %>% left_join(gestion)
enviando %>% left_join(gestion) %>% count()
enviando %>% inner_join(gestion) %>% count()
enviando %>% right_join(gestion) %>% count()
enviando %>% inner_join(gestion) %>% count()
rm(prioridades)
library(readxl)
library(dplyr)
library(lubridate)
read_xlsx("data.xlsx")
data<-read_xlsx("data.xlsx")
View(data)
install.packages("tidyr")
library(tidyr)
data[4]
data[1,4]
data[4,1]
data[1,1]
a<-seq(1)
seq(1)
seq(5)
seq(5,3)
seq(1,by=3)
seq(5,by=3)
seq(1,100,by=3)
seq(1,245,by=3)
a<-seq(1,245,by=3)
data[1,a]
data[a,1]
View(data)
data<-read_xlsx("data.xlsx")
a<-seq(1,245,by=3)
data[a,1]
View(data)
View(data)
a<-seq(1,245,by=4)
data[a,1]
seq(2,245,by=4)
b<-seq(2,245,by=4)
nombres<-data[b,1]
nombres<-data[a,1]
correo<-data[b,1]
View(correo)
data<-read_xlsx("data.xlsx")
a<-seq(1,245,by=4)
b<-seq(2,245,by=4)
nombres<-data[a,1]
correo<-data[b,1]
View(nombres)
View(correo)
data<-read_xlsx("data.xlsx")
a<-seq(1,245,by=4)
b<-seq(2,245,by=4)
nombres<-data[a,1]
correo<-data[b,1]
data<-read_xlsx("data.xlsx")
a<-seq(1,245,by=4)
b<-seq(2,245,by=4)
c<-seq(3,245,by=4)
d<-seq(4,245,by=4)
nombres<-data[a,1]
correo<-data[b,1]
cargo<-data[c,1]
funcion<-data[d,1]
View(cargo)
View(funcion)
cbind(nombres,correo,cargo,funcion)
View(nombres)
244/4
a<-seq(1,244,by=4)
b<-seq(2,245,by=4)
c<-seq(3,245,by=4)
d<-seq(4,245,by=4)
nombres<-data[a,1]
correo<-data[b,1]
cargo<-data[c,1]
funcion<-data[d,1]
cbind(nombres,correo,cargo,funcion)
colnames( cbind(nombres,correo,cargo,funcion))
colnames( cbind(nombres,correo,cargo,funcion))<-c("nombres","correos","cargo","funcion")
colnames( cbind(nombres,correo,cargo,funcion))<-c("nombres","correos","cargo","funcion")
colnames( cbind(nombres,correo,cargo,funcion))
cbind(nombres,correo,cargo,funcion)
data_voximplant<-cbind(nombres,correo,cargo,funcion)
colnames(data_voximplant)
colnames(data_voximplant)<-c("nombres","correos","cargos","funcion")
colnames(data_voximplant)
data_voximplant
library(writexl)
install.packages("writexl")
library(writexl)
write_xlsx(data_voximplant,"usuariosa_voximplant.xlsx")
rm(ls())
ls()
rm(ls=ls())
rm(ls())
ls()
rm(ls())
a<-ls()
rm(a)
